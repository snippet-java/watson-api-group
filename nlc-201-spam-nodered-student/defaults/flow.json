[{"id":"3b41f3fb.1f941c","type":"http in","z":"f1d9f81c.fa7428","name":"/call_nlc","url":"/call_nlc","method":"get","swaggerDoc":"","x":92.89582824707031,"y":273,"wires":[["5f7cbce2.f278b4"]]},{"id":"28d7ff89.2d239","type":"watson-natural-language-classifier","z":"f1d9f81c.fa7428","name":"NLC","mode":"classify","language":"en","classifier":"f5b42fx173-nlc-3980","x":502.8958282470703,"y":273,"wires":[["544d5bac.0ac034"]]},{"id":"5f7cbce2.f278b4","type":"function","z":"f1d9f81c.fa7428","name":"Parse mail_subject","func":"/**\n * Set msg.payload with mail_subject user provided\n * Save mail_subject into global context for later use\n */\n\nvar mail_subject = msg.req.query.mail_subject;\n\ncontext.global.mail_subject = mail_subject;\nmsg.payload = mail_subject;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":293.8958282470703,"y":273,"wires":[["28d7ff89.2d239"]]},{"id":"a3f5e89a.e214d8","type":"http response","z":"f1d9f81c.fa7428","name":"Display NLC Result","x":879.8958129882812,"y":384,"wires":[]},{"id":"3a346689.6c13ca","type":"http in","z":"f1d9f81c.fa7428","name":"/req_nlc","url":"/req_nlc","method":"get","swaggerDoc":"","x":95.89584350585938,"y":102,"wires":[["e225af86.0689e"]]},{"id":"e225af86.0689e","type":"template","z":"f1d9f81c.fa7428","name":"Template: Req NLC","field":"payload","fieldType":"msg","format":"handlebars","syntax":"plain","template":"<html>\n<body>\nSPAM Classifier powered by Watson NLC\n<br><br>\n\n<form action=\"/call_nlc\">\n\n<table>\n\n<tr>\n<td align=right>\n\tMail Subject or Content to Classify:\n</td>\n<td>\n\t<input type=text name=\"mail_subject\" size=80 maxlength=80>\n</td>\n</tr>\n\n<tr>\n<td></td>\n<td>\n\t<br>\n\t<input type=submit value=\"Submit\">\n</td>\n</tr>\n\n</table>\n\n</form>\n</body>\n</html>\n","x":339.8958435058594,"y":102,"wires":[["d3537223.63a0f"]]},{"id":"d3537223.63a0f","type":"http response","z":"f1d9f81c.fa7428","name":"","x":570.8958435058594,"y":102,"wires":[]},{"id":"2bd7fc4a.094154","type":"template","z":"f1d9f81c.fa7428","name":"Template: NLC Result","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!--\npayload.mail_subject: mail_subject user provided\npayload.top_class: classification result against mail_subject, either SPAM or Non-SPAM\n-->\n\n<html>\n<head>\n<script>\n    function clickYes() {\n        document.form1.user_feedback.value = \"Y\";\n        document.form1.submit();\n    }\n    function clickNo() {\n        document.form1.user_feedback.value = \"N\";\n        document.form1.submit();\n    }\n</script>\n</head>\n</head>\n<body>\nSPAM Classifier powered by Watson NLC\n<br><br>\n\n<form name=form1 action=\"/update_feedback\">\n\n<input type=hidden name=\"user_feedback\">\n\n<table border=0>\n\n<tr>\n<td align=right>\n\tMail Subject or Content to Classify:\n</td>\n<td>\n\t<font color=\"blue\">{{payload.mail_subject}}</font>\n\t<input type=hidden name=\"mail_subject\" value=\"{{payload.mail_subject}}\">\n</td>\n</tr>\n\n<tr>\n<td align=right>\n\tClassification Result by NLC:\n</td>\n<td>\n\t<font color=\"red\">{{payload.top_class}}</font>\n\t<input type=hidden name=\"classification_result\" value=\"{{payload.top_class}}\">\n</td>\n</tr>\n\n<tr>\n<td colspan=2 align=center>\n<br>\nDo you agree with NLC Result?\n<br><br>\n<input type=button value=\"Yes\" onClick=\"javascript:clickYes();\">\n<input type=button value=\"No\" onClick=\"javascript:clickNo();\">\n</td>\n</tr>\n\n</table>\n\n</form>\n</body>\n</html>\n","x":640.8958129882812,"y":384,"wires":[["a3f5e89a.e214d8"]]},{"id":"4c877c19.f98864","type":"http in","z":"f1d9f81c.fa7428","name":"/get_feedback","url":"/get_feedback","method":"get","swaggerDoc":"","x":95.89579772949219,"y":838.000244140625,"wires":[["a49abc66.27aa4"]]},{"id":"9fa9b6f4.e7e938","type":"template","z":"f1d9f81c.fa7428","name":"Template: User Feedback","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n<body>\nSPAM Classifier powered by Watson NLC\n<br><br>\n\n<table border=0>\n\n<tr>\n<td valign=top>\n\tUser Feedback:\n</td>\n<td>\n<textarea cols=80 rows=20>\n{{payload}}\n</textarea>\n</td>\n</tr>\n\n</table>\n\n</body>\n</html>\n","x":513.8957977294922,"y":939.000244140625,"wires":[["747d6044.05772"]]},{"id":"747d6044.05772","type":"http response","z":"f1d9f81c.fa7428","name":"","x":746.8957977294922,"y":938.000244140625,"wires":[]},{"id":"a49abc66.27aa4","type":"cloudant in","z":"f1d9f81c.fa7428","name":"User Feedback","cloudant":"","database":"my_database","service":"node-red-0116-cloudantNoSQLDB","search":"_all_","design":"","index":"","x":355.8957977294922,"y":837.000244140625,"wires":[["e33f4f6e.4da6f"]]},{"id":"e33f4f6e.4da6f","type":"function","z":"f1d9f81c.fa7428","name":" Collect records","func":"/**\n * Collect user feedback records from cloudant\n * Record format: mail_subject,classification_result,user_feedback\n * - mail_subject: mail_subject user provided\n * - classification_result: either SPAM or Non-SPAM\n * - user_feedback: either Y or N\n */\n\nvar len = msg.payload.length;\nvar newPayload = \"\";\nfor (var i=0; i<len; i++) {\n    if (newPayload != \"\") {\n        newPayload = newPayload + \"\\n\";\n    }\n    \n    var str = msg.payload[i].payload.toString();\n    \n    // Enclose mail_subject with quotation if it contains comma (,)\n    var arr = str.split(\",\");\n    if (arr.length > 3) {\n        str = \n            parse_mail_subject(arr)\n            + \",\"\n            + arr[arr.length-2]\n            + \",\"\n            + arr[arr.length-1];\n    }\n\n    newPayload = newPayload + str;\n}\n\nmsg.payload = newPayload;\nreturn msg;\n\n\nfunction parse_mail_subject(arr) {\n    \n    var str = \"\";\n    for (var i=0; i<arr.length-2; i++) {\n        if (str != \"\") {\n            str = str + \",\";\n        }\n        str = str + arr[i];\n    }\n    str = \"\\\"\" + str + \"\\\"\";\n    \n    return str;\n}","outputs":"1","noerr":0,"x":573.8957977294922,"y":837.000244140625,"wires":[["9fa9b6f4.e7e938"]]},{"id":"30ffbfdb.e0e7","type":"comment","z":"f1d9f81c.fa7428","name":"Display Input Page to User","info":"User load mail subject or content input page","x":146.89584350585938,"y":55,"wires":[]},{"id":"2124dc51.d636c4","type":"comment","z":"f1d9f81c.fa7428","name":"User Submit -> Call NLC to classify SPAM / Non-SPAM","info":"When user submit \"mail subject or contents\", \nsystem ask NLC to classify if it is SPAM or Non-SPAM","x":231.8958282470703,"y":221,"wires":[]},{"id":"4834bed2.bf2be","type":"comment","z":"f1d9f81c.fa7428","name":"Get User Feedback from Cloudant","info":"For later training","x":159.8957977294922,"y":789.000244140625,"wires":[]},{"id":"bc4b6594.b53508","type":"http in","z":"f1d9f81c.fa7428","name":"/update_feedback","url":"/update_feedback","method":"get","swaggerDoc":"","x":116.79165649414062,"y":586.8889465332031,"wires":[["b6021075.bf4ef"]]},{"id":"b6021075.bf4ef","type":"function","z":"f1d9f81c.fa7428","name":"Parse user_feedback","func":"/**\n * Compose a string which is saved into cloudant\n * String Format: mail_subject,classification_result,user_feedback\n * - mail_subject: mail_subject user provided\n * - classification_result: either SPAM or Non-SPAM\n * - user_feedback: either Y or N\n */\n\n// replace quotation with space to avoide error while saving into cloudant\nvar mail_subject = msg.req.query.mail_subject.trim();\nif (mail_subject.indexOf(\"\\\"\") > -1) {\n    var arr = mail_subject.split(\"\\\"\");\n    mail_subject = \"\";\n    for (var i=0; i<arr.length; i++) {\n        if (mail_subject != \"\") {\n            mail_subject + \" \";\n        }\n        mail_subject = mail_subject + arr[i];\n    }\n}\n\nmsg.payload = \n    mail_subject\n    + \",\"\n    + msg.req.query.classification_result\n    + \",\"\n    + msg.req.query.user_feedback\n;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":385.7916564941406,"y":585.888916015625,"wires":[["d1271eb8.a2cce","1092b881.601317"]]},{"id":"20b581e7.42c8fe","type":"comment","z":"f1d9f81c.fa7428","name":"User click Yes or No -> Update User Feedback into Cloudant","info":"Format: Mail Subject, Classification Result, User Feedback\nExample: \"Hi world !\", SPAM, Y","x":241.79165649414062,"y":534.888916015625,"wires":[]},{"id":"d1271eb8.a2cce","type":"template","z":"f1d9f81c.fa7428","name":"Alert and Redirect","field":"payload","fieldType":"msg","format":"handlebars","syntax":"plain","template":"<html>\n<body>\n    <script>\n        alert(\"Your feedback was saved for later training. Thank you.\")\n        location.href = \"/req_nlc\"\n    </script>\n</body>\n</html>","x":643.7326812744141,"y":646.2326965332031,"wires":[["a6bd45dd.c0e7f8"]]},{"id":"a6bd45dd.c0e7f8","type":"http response","z":"f1d9f81c.fa7428","name":"Redirect to /req_nlc","x":871.7916412353516,"y":646.0000915527344,"wires":[]},{"id":"1092b881.601317","type":"cloudant out","z":"f1d9f81c.fa7428","name":"User Feedback","cloudant":"","database":"my_database","service":"node-red-0116-cloudantNoSQLDB","payonly":true,"operation":"insert","x":633.7916412353516,"y":585.8889770507812,"wires":[]},{"id":"544d5bac.0ac034","type":"function","z":"f1d9f81c.fa7428","name":"Deliver mail_subject","func":"/**\n * Get mail_subject from global context and deliver to template generator\n */\n\nmsg.payload.mail_subject = context.global.mail_subject;\nreturn msg;","outputs":1,"noerr":0,"x":376.72222900390625,"y":384.8055725097656,"wires":[["2bd7fc4a.094154"]]}]